{
  "contractName": "SampleCrowdsale",
  "abi": [
    {
      "constant": true,
      "inputs": [],
      "name": "hasClosed",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "rate",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "cap",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goal",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "weiRaised",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "closingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "finalize",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "capReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "wallet",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "goalReached",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "isFinalized",
      "outputs": [
        {
          "name": "",
          "type": "bool"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "owner",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [],
      "name": "claimRefund",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "openingTime",
      "outputs": [
        {
          "name": "",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "_beneficiary",
          "type": "address"
        }
      ],
      "name": "buyTokens",
      "outputs": [],
      "payable": true,
      "stateMutability": "payable",
      "type": "function"
    },
    {
      "constant": false,
      "inputs": [
        {
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "transferOwnership",
      "outputs": [],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "vault",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "constant": true,
      "inputs": [],
      "name": "token",
      "outputs": [
        {
          "name": "",
          "type": "address"
        }
      ],
      "payable": false,
      "stateMutability": "view",
      "type": "function"
    },
    {
      "inputs": [
        {
          "name": "_openingTime",
          "type": "uint256"
        },
        {
          "name": "_closingTime",
          "type": "uint256"
        },
        {
          "name": "_rate",
          "type": "uint256"
        },
        {
          "name": "_wallet",
          "type": "address"
        },
        {
          "name": "_cap",
          "type": "uint256"
        },
        {
          "name": "_token",
          "type": "address"
        },
        {
          "name": "_goal",
          "type": "uint256"
        }
      ],
      "payable": false,
      "stateMutability": "nonpayable",
      "type": "constructor"
    },
    {
      "payable": true,
      "stateMutability": "payable",
      "type": "fallback"
    },
    {
      "anonymous": false,
      "inputs": [],
      "name": "Finalized",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "previousOwner",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "newOwner",
          "type": "address"
        }
      ],
      "name": "OwnershipTransferred",
      "type": "event"
    },
    {
      "anonymous": false,
      "inputs": [
        {
          "indexed": true,
          "name": "purchaser",
          "type": "address"
        },
        {
          "indexed": true,
          "name": "beneficiary",
          "type": "address"
        },
        {
          "indexed": false,
          "name": "value",
          "type": "uint256"
        },
        {
          "indexed": false,
          "name": "amount",
          "type": "uint256"
        }
      ],
      "name": "TokenPurchase",
      "type": "event"
    }
  ],
  "bytecode": "",
  "deployedBytecode": "0x6060604052600436106100fc576000357c0100000000000000000000000000000000000000000000000000000000900463ffffffff1680631515bc2b146101075780632c4e722e14610134578063355274ea1461015d57806340193883146101865780634042b66f146101af5780634b6753bc146101d85780634bb278f3146102015780634f93594514610216578063521eb273146102435780637d3d6522146102985780638d4e4083146102c55780638da5cb5b146102f2578063b5545a3c14610347578063b7a8807c1461035c578063ec8ac4d814610385578063f2fde38b146103b3578063fbfa77cf146103ec578063fc0c546a14610441575b61010533610496565b005b341561011257600080fd5b61011a610564565b604051808215151515815260200191505060405180910390f35b341561013f57600080fd5b610147610570565b6040518082815260200191505060405180910390f35b341561016857600080fd5b610170610576565b6040518082815260200191505060405180910390f35b341561019157600080fd5b61019961057c565b6040518082815260200191505060405180910390f35b34156101ba57600080fd5b6101c2610582565b6040518082815260200191505060405180910390f35b34156101e357600080fd5b6101eb610588565b6040518082815260200191505060405180910390f35b341561020c57600080fd5b61021461058e565b005b341561022157600080fd5b61022961066a565b604051808215151515815260200191505060405180910390f35b341561024e57600080fd5b610256610679565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b34156102a357600080fd5b6102ab61069f565b604051808215151515815260200191505060405180910390f35b34156102d057600080fd5b6102d86106ae565b604051808215151515815260200191505060405180910390f35b34156102fd57600080fd5b6103056106c1565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561035257600080fd5b61035a6106e7565b005b341561036757600080fd5b61036f6107e8565b6040518082815260200191505060405180910390f35b6103b1600480803573ffffffffffffffffffffffffffffffffffffffff16906020019091905050610496565b005b34156103be57600080fd5b6103ea600480803573ffffffffffffffffffffffffffffffffffffffff169060200190919050506107ee565b005b34156103f757600080fd5b6103ff610946565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b341561044c57600080fd5b61045461096c565b604051808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200191505060405180910390f35b6000803491506104a68383610991565b6104af826109be565b90506104c6826003546109dc90919063ffffffff16565b6003819055506104d683826109fa565b8273ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f623b3804fa71d67900d064613da8f94b9617215ee90799290593e1745087ad188484604051808381526020018281526020019250505060405180910390a361054d8383610a08565b610555610a0c565b61055f8383610adf565b505050565b60006006544211905090565b60025481565b60045481565b60085481565b60035481565b60065481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161415156105ea57600080fd5b600760149054906101000a900460ff1615151561060657600080fd5b61060e610564565b151561061957600080fd5b610621610ae3565b7f6823b073d48d6e3a7d385eeb601452d680e74bb46afe3255a7d778f3a9b1768160405160405180910390a16001600760146101000a81548160ff021916908315150217905550565b60006004546003541015905090565b600160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60006008546003541015905090565b600760149054906101000a900460ff1681565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b600760149054906101000a900460ff16151561070257600080fd5b61070a61069f565b15151561071657600080fd5b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663fa89401a336040518263ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001915050600060405180830381600087803b15156107d257600080fd5b6102c65a03f115156107e357600080fd5b505050565b60055481565b600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614151561084a57600080fd5b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415151561088657600080fd5b8073ffffffffffffffffffffffffffffffffffffffff16600760009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a380600760006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b60055442101580156109a557506006544211155b15156109b057600080fd5b6109ba8282610c32565b5050565b60006109d560025483610c6590919063ffffffff16565b9050919050565b60008082840190508381101515156109f057fe5b8091505092915050565b610a048282610ca0565b5050565b5050565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1663f340fa0134336040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019150506000604051808303818588803b1515610ac857600080fd5b6125ee5a03f11515610ad957600080fd5b50505050565b5050565b610aeb61069f565b15610b8e57600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166343d726d66040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1515610b7557600080fd5b6102c65a03f11515610b8657600080fd5b505050610c28565b600960009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16638c52dc416040518163ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401600060405180830381600087803b1515610c1357600080fd5b6102c65a03f11515610c2457600080fd5b5050505b610c30610d96565b565b610c3c8282610d98565b600454610c54826003546109dc90919063ffffffff16565b11151515610c6157600080fd5b5050565b6000806000841415610c7a5760009150610c99565b8284029050828482811515610c8b57fe5b04141515610c9557fe5b8091505b5092915050565b6000809054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff166340c10f1983836000604051602001526040518363ffffffff167c0100000000000000000000000000000000000000000000000000000000028152600401808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200182815260200192505050602060405180830381600087803b1515610d6c57600080fd5b6102c65a03f11515610d7d57600080fd5b505050604051805190501515610d9257600080fd5b5050565b565b600073ffffffffffffffffffffffffffffffffffffffff168273ffffffffffffffffffffffffffffffffffffffff1614151515610dd457600080fd5b60008114151515610de457600080fd5b50505600a165627a7a72305820b0aa0c34f7d0f5ada7664632213e494065f4ade55a805f1f3fd2f84e3f3d0ce60029",
  "sourceMap": "1422:602:8:-;;;384:5:2;358:31;;;;;;;;;;;;;;;;;;;;1509:513:8;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1839:5;1787:12;1801;1762:4;1718:5;1725:7;1734:6;1710:1:1;1702:5;:9;1694:18;;;;;;;;1745:1;1726:21;;:7;:21;;;;1718:30;;;;;;;;1780:1;1762:20;;:6;:20;;;;1754:29;;;;;;;;1797:5;1790:4;:12;;;;1817:7;1808:6;;:16;;;;;;;;;;;;;;;;;;1838:6;1830:5;;:14;;;;;;;;;;;;;;;;;;1616:233;;;485:1:6;478:4;:8;470:17;;;;;;;;499:4;493:3;:10;;;;418:90;782:15:7;766:12;:31;;758:40;;;;;;;;828:12;812;:28;;804:37;;;;;;;;862:12;848:11;:26;;;;894:12;880:11;:26;;;;677:234;;509:10:10;501:5;;:18;;;;;;;;;;;;;;;;;;770:1:3;762:5;:9;754:18;;;;;;;;802:6;;;;;;;;;;;786:23;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;778:5;;:31;;;;;;;;;;;;;;;;;;822:5;815:4;:12;;;;697:135;2012:4:8;2003:5;:13;;1995:22;;;;;;;;1509:513;;;;;;;1422:602;;;;;;;;;;;;:::o;:::-;;;;;;;",
  "deployedSourceMap": "1422:602:8:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2079:21:1;2089:10;2079:9;:21::i;:::-;1422:602:8;1065:95:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1005:19:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;252:18:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;493:19:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1055:24:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;292:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;560:158:2;;;;;;;;;;;;;;617:83:6;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;932:21:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1154:85:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;358:31:2;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;238:20:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;920:121:3;;;;;;;;;;;;;;262:26:7;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:542:1;;;;;;;;;;;;;;;;;;;;832:169:10;;;;;;;;;;;;;;;;;;;;;;;;;;;;581:24:3;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;870:18:1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;2241:542;2304:17;2435:14;2324:9;2304:29;;2339:45;2360:12;2374:9;2339:20;:45::i;:::-;2452:26;2468:9;2452:15;:26::i;:::-;2435:43;;2517:24;2531:9;2517;;:13;;:24;;;;:::i;:::-;2505:9;:36;;;;2548:38;2565:12;2579:6;2548:16;:38::i;:::-;2618:12;2592:58;;2606:10;2592:58;;;2632:9;2643:6;2592:58;;;;;;;;;;;;;;;;;;;;;;;;2657:47;2680:12;2694:9;2657:22;:47::i;:::-;2711:15;:13;:15::i;:::-;2732:46;2754:12;2768:9;2732:21;:46::i;:::-;2241:542;;;:::o;1065:95:7:-;1107:4;1144:11;;1126:15;:29;1119:36;;1065:95;:::o;1005:19:1:-;;;;:::o;252:18:6:-;;;;:::o;493:19:3:-;;;;:::o;1055:24:1:-;;;;:::o;292:26:7:-;;;;:::o;560:158:2:-;653:5:10;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;612:11:2;;;;;;;;;;;611:12;603:21;;;;;;;;638:11;:9;:11::i;:::-;630:20;;;;;;;;657:14;:12;:14::i;:::-;677:11;;;;;;;;;;709:4;695:11;;:18;;;;;;;;;;;;;;;;;;560:158::o;617:83:6:-;660:4;692:3;;679:9;;:16;;672:23;;617:83;:::o;932:21:1:-;;;;;;;;;;;;;:::o;1154:85:3:-;1198:4;1230;;1217:9;;:17;;1210:24;;1154:85;:::o;358:31:2:-;;;;;;;;;;;;;:::o;238:20:10:-;;;;;;;;;;;;;:::o;920:121:3:-;964:11;;;;;;;;;;;956:20;;;;;;;;991:13;:11;:13::i;:::-;990:14;982:23;;;;;;;;1012:5;;;;;;;;;;;:12;;;1025:10;1012:24;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;920:121::o;262:26:7:-;;;;:::o;832:169:10:-;653:5;;;;;;;;;;;639:19;;:10;:19;;;631:28;;;;;;;;928:1;908:22;;:8;:22;;;;900:31;;;;;;;;965:8;937:37;;958:5;;;;;;;;;;;937:37;;;;;;;;;;;;988:8;980:5;;:16;;;;;;;;;;;;;;;;;;832:169;:::o;581:24:3:-;;;;;;;;;;;;;:::o;870:18:1:-;;;;;;;;;;;;;:::o;1342:158:7:-;441:11;;422:15;:30;;:64;;;;;475:11;;456:15;:30;;422:64;414:73;;;;;;;;1443:52;1470:12;1484:10;1443:26;:52::i;:::-;1342:158;;:::o;5130:115:1:-;5198:7;5220:20;5235:4;;5220:10;:14;;:20;;;;:::i;:::-;5213:27;;5130:115;;;:::o;1014:129:9:-;1072:7;1087:9;1103:1;1099;:5;1087:17;;1122:1;1117;:6;;1110:14;;;;;;1137:1;1130:8;;1014:129;;;;;:::o;4394:132:1:-;4479:42;4494:12;4508;4479:14;:42::i;:::-;4394:132;;:::o;4779:113::-;;;:::o;1571:87:3:-;1611:5;;;;;;;;;;;:13;;;1631:9;1642:10;1611:42;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1571:87::o;3642:112:1:-;;;:::o;1325:159:3:-;1368:13;:11;:13::i;:::-;1364:89;;;1391:5;;;;;;;;;;;:11;;;:13;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:89;;;1425:5;;;;;;;;;;;:19;;;:21;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;1364:89;1459:20;:18;:20::i;:::-;1325:159::o;886:191:6:-;973:52;1000:12;1014:10;973:26;:52::i;:::-;1068:3;;1039:25;1053:10;1039:9;;:13;;:25;;;;:::i;:::-;:32;;1031:41;;;;;;;;886:191;;:::o;203:173:9:-;261:7;316:9;285:1;280;:6;276:35;;;303:1;296:8;;;;276:35;332:1;328;:5;316:17;;355:1;350;346;:5;;;;;;;;:10;339:18;;;;;;370:1;363:8;;203:173;;;;;;:::o;504:150:5:-;609:5;;;;;;;;;;;595:25;;;621:12;635;595:53;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;587:62;;;;;;;;504:150;;:::o;914:38:2:-;:::o;3207:157:1:-;3326:1;3302:26;;:12;:26;;;;3294:35;;;;;;;;3357:1;3343:10;:15;;3335:24;;;;;;;;3207:157;;:::o",
  "source": "pragma solidity ^0.4.18;\n\nimport \"../crowdsale/validation/CappedCrowdsale.sol\";\nimport \"../crowdsale/distribution/RefundableCrowdsale.sol\";\nimport \"../crowdsale/emission/MintedCrowdsale.sol\";\nimport \"../token/ERC20/MintableToken.sol\";\n\n\n/**\n * @title SampleCrowdsaleToken\n * @dev Very simple ERC20 Token that can be minted.\n * It is meant to be used in a crowdsale contract.\n */\ncontract SampleCrowdsaleToken is MintableToken {\n\n  // string public constant name = \"Sample Crowdsale Token\"; // solium-disable-line uppercase\n  // string public constant symbol = \"SCT\"; // solium-disable-line uppercase\n  // uint8 public constant decimals = 18; // solium-disable-line uppercase\n\n  string public name;\n  string public symbol;\n  uint8 public decimals = 18;\n\n  function SampleCrowdsaleToken(string _name, string _symbol, uint8 _decimals) {\n    name = _name;\n    symbol = _symbol;\n    decimals = _decimals;\n  }\n}\n\n\n/**\n * @title SampleCrowdsale\n * @dev This is an example of a fully fledged crowdsale.\n * The way to add new features to a base crowdsale is by multiple inheritance.\n * In this example we are providing following extensions:\n * CappedCrowdsale - sets a max boundary for raised funds\n * RefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n *\n * After adding multiple features it's good practice to run integration tests\n * to ensure that subcontracts works together as intended.\n */\ncontract SampleCrowdsale is CappedCrowdsale, RefundableCrowdsale, MintedCrowdsale {\n\n  function SampleCrowdsale(\n    uint256 _openingTime,\n    uint256 _closingTime,\n    uint256 _rate,\n    address _wallet,\n    uint256 _cap,\n    MintableToken _token,\n    uint256 _goal\n  )\n    public\n    Crowdsale(_rate, _wallet, _token)\n    CappedCrowdsale(_cap)\n    TimedCrowdsale(_openingTime, _closingTime)\n    RefundableCrowdsale(_goal)\n  {\n    //As goal needs to be met for a successful crowdsale\n    //the value needs to less or equal than a cap which is limit for accepted funds\n    require(_goal <= _cap);\n  }\n}\n",
  "sourcePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/examples/SampleCrowdsale.sol",
  "ast": {
    "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        862
      ],
      "SampleCrowdsaleToken": [
        816
      ]
    },
    "id": 863,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 780,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 781,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 692,
        "src": "26:53:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 782,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 438,
        "src": "80:59:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 783,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 630,
        "src": "140:51:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/token/ERC20/MintableToken.sol",
        "file": "../token/ERC20/MintableToken.sol",
        "id": 784,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 1279,
        "src": "192:42:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 785,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1278,
              "src": "412:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$1278",
                "typeString": "contract MintableToken"
              }
            },
            "id": 786,
            "nodeType": "InheritanceSpecifier",
            "src": "412:13:8"
          }
        ],
        "contractDependencies": [
          1012,
          1108,
          1151,
          1183,
          1278,
          1524
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 816,
        "linearizedBaseContracts": [
          816,
          1278,
          1012,
          1524,
          1108,
          1151,
          1183
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 788,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 816,
            "src": "678:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 787,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "678:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 790,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 816,
            "src": "700:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 789,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "700:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 793,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 816,
            "src": "724:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 791,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "724:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 792,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "748:2:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "832:71:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 802,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "838:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 803,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "845:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "838:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "838:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 806,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "856:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 807,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 797,
                      "src": "865:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "856:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "856:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 810,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "878:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 811,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "889:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "878:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "878:20:8"
                }
              ]
            },
            "id": 815,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "SampleCrowdsaleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 795,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "785:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "799:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "815:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "784:47:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:8"
            },
            "scope": 816,
            "src": "755:148:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 863,
        "src": "379:526:8"
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 817,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 691,
              "src": "1450:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$691",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 818,
            "nodeType": "InheritanceSpecifier",
            "src": "1450:15:8"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 819,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 437,
              "src": "1467:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$437",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 820,
            "nodeType": "InheritanceSpecifier",
            "src": "1467:19:8"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 821,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 629,
              "src": "1488:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$629",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 822,
            "nodeType": "InheritanceSpecifier",
            "src": "1488:15:8"
          }
        ],
        "contractDependencies": [
          280,
          328,
          437,
          629,
          691,
          778,
          1012
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 862,
        "linearizedBaseContracts": [
          862,
          629,
          437,
          328,
          1012,
          778,
          691,
          280
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 860,
              "nodeType": "Block",
              "src": "1848:174:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 855,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "2003:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 856,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 832,
                          "src": "2012:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2003:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "1995:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:22:8"
                }
              ]
            },
            "id": 861,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 839,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 828,
                    "src": "1718:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 840,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 830,
                    "src": "1725:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 841,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 834,
                    "src": "1734:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1278",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 842,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 838,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "1708:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$280_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1708:33:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 844,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 832,
                    "src": "1762:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 845,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 843,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 691,
                  "src": "1746:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$691_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1746:21:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 847,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 824,
                    "src": "1787:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 848,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 826,
                    "src": "1801:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 849,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 846,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 778,
                  "src": "1772:14:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$778_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1772:42:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 851,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 836,
                    "src": "1839:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 852,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 850,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 437,
                  "src": "1819:19:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$437_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1819:26:8"
              }
            ],
            "name": "SampleCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1539:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1565:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1591:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1610:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1631:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1649:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1278",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 833,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1278,
                    "src": "1649:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1278",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1675:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1533:159:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:8"
            },
            "scope": 862,
            "src": "1509:513:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 863,
        "src": "1422:602:8"
      }
    ],
    "src": "0:2025:8"
  },
  "legacyAST": {
    "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/examples/SampleCrowdsale.sol",
    "exportedSymbols": {
      "SampleCrowdsale": [
        862
      ],
      "SampleCrowdsaleToken": [
        816
      ]
    },
    "id": 863,
    "nodeType": "SourceUnit",
    "nodes": [
      {
        "id": 780,
        "literals": [
          "solidity",
          "^",
          "0.4",
          ".18"
        ],
        "nodeType": "PragmaDirective",
        "src": "0:24:8"
      },
      {
        "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/crowdsale/validation/CappedCrowdsale.sol",
        "file": "../crowdsale/validation/CappedCrowdsale.sol",
        "id": 781,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 692,
        "src": "26:53:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/crowdsale/distribution/RefundableCrowdsale.sol",
        "file": "../crowdsale/distribution/RefundableCrowdsale.sol",
        "id": 782,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 438,
        "src": "80:59:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/crowdsale/emission/MintedCrowdsale.sol",
        "file": "../crowdsale/emission/MintedCrowdsale.sol",
        "id": 783,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 630,
        "src": "140:51:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "absolutePath": "/Users/kiendn/coding/tutorial/truffle/deploy_contract_without_cmd/contracts/token/ERC20/MintableToken.sol",
        "file": "../token/ERC20/MintableToken.sol",
        "id": 784,
        "nodeType": "ImportDirective",
        "scope": 863,
        "sourceUnit": 1279,
        "src": "192:42:8",
        "symbolAliases": [],
        "unitAlias": ""
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 785,
              "name": "MintableToken",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 1278,
              "src": "412:13:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintableToken_$1278",
                "typeString": "contract MintableToken"
              }
            },
            "id": 786,
            "nodeType": "InheritanceSpecifier",
            "src": "412:13:8"
          }
        ],
        "contractDependencies": [
          1012,
          1108,
          1151,
          1183,
          1278,
          1524
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsaleToken\n@dev Very simple ERC20 Token that can be minted.\nIt is meant to be used in a crowdsale contract.",
        "fullyImplemented": true,
        "id": 816,
        "linearizedBaseContracts": [
          816,
          1278,
          1012,
          1524,
          1108,
          1151,
          1183
        ],
        "name": "SampleCrowdsaleToken",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "constant": false,
            "id": 788,
            "name": "name",
            "nodeType": "VariableDeclaration",
            "scope": 816,
            "src": "678:18:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 787,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "678:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 790,
            "name": "symbol",
            "nodeType": "VariableDeclaration",
            "scope": 816,
            "src": "700:20:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_string_storage",
              "typeString": "string storage ref"
            },
            "typeName": {
              "id": 789,
              "name": "string",
              "nodeType": "ElementaryTypeName",
              "src": "700:6:8",
              "typeDescriptions": {
                "typeIdentifier": "t_string_storage_ptr",
                "typeString": "string storage pointer"
              }
            },
            "value": null,
            "visibility": "public"
          },
          {
            "constant": false,
            "id": 793,
            "name": "decimals",
            "nodeType": "VariableDeclaration",
            "scope": 816,
            "src": "724:26:8",
            "stateVariable": true,
            "storageLocation": "default",
            "typeDescriptions": {
              "typeIdentifier": "t_uint8",
              "typeString": "uint8"
            },
            "typeName": {
              "id": 791,
              "name": "uint8",
              "nodeType": "ElementaryTypeName",
              "src": "724:5:8",
              "typeDescriptions": {
                "typeIdentifier": "t_uint8",
                "typeString": "uint8"
              }
            },
            "value": {
              "argumentTypes": null,
              "hexValue": "3138",
              "id": 792,
              "isConstant": false,
              "isLValue": false,
              "isPure": true,
              "kind": "number",
              "lValueRequested": false,
              "nodeType": "Literal",
              "src": "748:2:8",
              "subdenomination": null,
              "typeDescriptions": {
                "typeIdentifier": "t_rational_18_by_1",
                "typeString": "int_const 18"
              },
              "value": "18"
            },
            "visibility": "public"
          },
          {
            "body": {
              "id": 814,
              "nodeType": "Block",
              "src": "832:71:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 804,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 802,
                      "name": "name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 788,
                      "src": "838:4:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 803,
                      "name": "_name",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 795,
                      "src": "845:5:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "838:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 805,
                  "nodeType": "ExpressionStatement",
                  "src": "838:12:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 808,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 806,
                      "name": "symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 790,
                      "src": "856:6:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_storage",
                        "typeString": "string storage ref"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 807,
                      "name": "_symbol",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 797,
                      "src": "865:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_string_memory_ptr",
                        "typeString": "string memory"
                      }
                    },
                    "src": "856:16:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage",
                      "typeString": "string storage ref"
                    }
                  },
                  "id": 809,
                  "nodeType": "ExpressionStatement",
                  "src": "856:16:8"
                },
                {
                  "expression": {
                    "argumentTypes": null,
                    "id": 812,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "lValueRequested": false,
                    "leftHandSide": {
                      "argumentTypes": null,
                      "id": 810,
                      "name": "decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 793,
                      "src": "878:8:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "nodeType": "Assignment",
                    "operator": "=",
                    "rightHandSide": {
                      "argumentTypes": null,
                      "id": 811,
                      "name": "_decimals",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 799,
                      "src": "889:9:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_uint8",
                        "typeString": "uint8"
                      }
                    },
                    "src": "878:20:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "id": 813,
                  "nodeType": "ExpressionStatement",
                  "src": "878:20:8"
                }
              ]
            },
            "id": 815,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [],
            "name": "SampleCrowdsaleToken",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 800,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 795,
                  "name": "_name",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "785:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 794,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "785:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 797,
                  "name": "_symbol",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "799:14:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_string_memory_ptr",
                    "typeString": "string memory"
                  },
                  "typeName": {
                    "id": 796,
                    "name": "string",
                    "nodeType": "ElementaryTypeName",
                    "src": "799:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_string_storage_ptr",
                      "typeString": "string storage pointer"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 799,
                  "name": "_decimals",
                  "nodeType": "VariableDeclaration",
                  "scope": 815,
                  "src": "815:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint8",
                    "typeString": "uint8"
                  },
                  "typeName": {
                    "id": 798,
                    "name": "uint8",
                    "nodeType": "ElementaryTypeName",
                    "src": "815:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint8",
                      "typeString": "uint8"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "784:47:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 801,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "832:0:8"
            },
            "scope": 816,
            "src": "755:148:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 863,
        "src": "379:526:8"
      },
      {
        "baseContracts": [
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 817,
              "name": "CappedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 691,
              "src": "1450:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_CappedCrowdsale_$691",
                "typeString": "contract CappedCrowdsale"
              }
            },
            "id": 818,
            "nodeType": "InheritanceSpecifier",
            "src": "1450:15:8"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 819,
              "name": "RefundableCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 437,
              "src": "1467:19:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_RefundableCrowdsale_$437",
                "typeString": "contract RefundableCrowdsale"
              }
            },
            "id": 820,
            "nodeType": "InheritanceSpecifier",
            "src": "1467:19:8"
          },
          {
            "arguments": [],
            "baseName": {
              "contractScope": null,
              "id": 821,
              "name": "MintedCrowdsale",
              "nodeType": "UserDefinedTypeName",
              "referencedDeclaration": 629,
              "src": "1488:15:8",
              "typeDescriptions": {
                "typeIdentifier": "t_contract$_MintedCrowdsale_$629",
                "typeString": "contract MintedCrowdsale"
              }
            },
            "id": 822,
            "nodeType": "InheritanceSpecifier",
            "src": "1488:15:8"
          }
        ],
        "contractDependencies": [
          280,
          328,
          437,
          629,
          691,
          778,
          1012
        ],
        "contractKind": "contract",
        "documentation": "@title SampleCrowdsale\n@dev This is an example of a fully fledged crowdsale.\nThe way to add new features to a base crowdsale is by multiple inheritance.\nIn this example we are providing following extensions:\nCappedCrowdsale - sets a max boundary for raised funds\nRefundableCrowdsale - set a min goal to be reached and returns funds if it's not met\n * After adding multiple features it's good practice to run integration tests\nto ensure that subcontracts works together as intended.",
        "fullyImplemented": true,
        "id": 862,
        "linearizedBaseContracts": [
          862,
          629,
          437,
          328,
          1012,
          778,
          691,
          280
        ],
        "name": "SampleCrowdsale",
        "nodeType": "ContractDefinition",
        "nodes": [
          {
            "body": {
              "id": 860,
              "nodeType": "Block",
              "src": "1848:174:8",
              "statements": [
                {
                  "expression": {
                    "argumentTypes": null,
                    "arguments": [
                      {
                        "argumentTypes": null,
                        "commonType": {
                          "typeIdentifier": "t_uint256",
                          "typeString": "uint256"
                        },
                        "id": 857,
                        "isConstant": false,
                        "isLValue": false,
                        "isPure": false,
                        "lValueRequested": false,
                        "leftExpression": {
                          "argumentTypes": null,
                          "id": 855,
                          "name": "_goal",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 836,
                          "src": "2003:5:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "nodeType": "BinaryOperation",
                        "operator": "<=",
                        "rightExpression": {
                          "argumentTypes": null,
                          "id": 856,
                          "name": "_cap",
                          "nodeType": "Identifier",
                          "overloadedDeclarations": [],
                          "referencedDeclaration": 832,
                          "src": "2012:4:8",
                          "typeDescriptions": {
                            "typeIdentifier": "t_uint256",
                            "typeString": "uint256"
                          }
                        },
                        "src": "2003:13:8",
                        "typeDescriptions": {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      }
                    ],
                    "expression": {
                      "argumentTypes": [
                        {
                          "typeIdentifier": "t_bool",
                          "typeString": "bool"
                        }
                      ],
                      "id": 854,
                      "name": "require",
                      "nodeType": "Identifier",
                      "overloadedDeclarations": [],
                      "referencedDeclaration": 1539,
                      "src": "1995:7:8",
                      "typeDescriptions": {
                        "typeIdentifier": "t_function_require_pure$_t_bool_$returns$__$",
                        "typeString": "function (bool) pure"
                      }
                    },
                    "id": 858,
                    "isConstant": false,
                    "isLValue": false,
                    "isPure": false,
                    "kind": "functionCall",
                    "lValueRequested": false,
                    "names": [],
                    "nodeType": "FunctionCall",
                    "src": "1995:22:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_tuple$__$",
                      "typeString": "tuple()"
                    }
                  },
                  "id": 859,
                  "nodeType": "ExpressionStatement",
                  "src": "1995:22:8"
                }
              ]
            },
            "id": 861,
            "implemented": true,
            "isConstructor": true,
            "isDeclaredConst": false,
            "modifiers": [
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 839,
                    "name": "_rate",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 828,
                    "src": "1718:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 840,
                    "name": "_wallet",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 830,
                    "src": "1725:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 841,
                    "name": "_token",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 834,
                    "src": "1734:6:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1278",
                      "typeString": "contract MintableToken"
                    }
                  }
                ],
                "id": 842,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 838,
                  "name": "Crowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 280,
                  "src": "1708:9:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_Crowdsale_$280_$",
                    "typeString": "type(contract Crowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1708:33:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 844,
                    "name": "_cap",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 832,
                    "src": "1762:4:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 845,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 843,
                  "name": "CappedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 691,
                  "src": "1746:15:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_CappedCrowdsale_$691_$",
                    "typeString": "type(contract CappedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1746:21:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 847,
                    "name": "_openingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 824,
                    "src": "1787:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  {
                    "argumentTypes": null,
                    "id": 848,
                    "name": "_closingTime",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 826,
                    "src": "1801:12:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 849,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 846,
                  "name": "TimedCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 778,
                  "src": "1772:14:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_TimedCrowdsale_$778_$",
                    "typeString": "type(contract TimedCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1772:42:8"
              },
              {
                "arguments": [
                  {
                    "argumentTypes": null,
                    "id": 851,
                    "name": "_goal",
                    "nodeType": "Identifier",
                    "overloadedDeclarations": [],
                    "referencedDeclaration": 836,
                    "src": "1839:5:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  }
                ],
                "id": 852,
                "modifierName": {
                  "argumentTypes": null,
                  "id": 850,
                  "name": "RefundableCrowdsale",
                  "nodeType": "Identifier",
                  "overloadedDeclarations": [],
                  "referencedDeclaration": 437,
                  "src": "1819:19:8",
                  "typeDescriptions": {
                    "typeIdentifier": "t_type$_t_contract$_RefundableCrowdsale_$437_$",
                    "typeString": "type(contract RefundableCrowdsale)"
                  }
                },
                "nodeType": "ModifierInvocation",
                "src": "1819:26:8"
              }
            ],
            "name": "SampleCrowdsale",
            "nodeType": "FunctionDefinition",
            "parameters": {
              "id": 837,
              "nodeType": "ParameterList",
              "parameters": [
                {
                  "constant": false,
                  "id": 824,
                  "name": "_openingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1539:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 823,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1539:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 826,
                  "name": "_closingTime",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1565:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 825,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1565:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 828,
                  "name": "_rate",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1591:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 827,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1591:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 830,
                  "name": "_wallet",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1610:15:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_address",
                    "typeString": "address"
                  },
                  "typeName": {
                    "id": 829,
                    "name": "address",
                    "nodeType": "ElementaryTypeName",
                    "src": "1610:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_address",
                      "typeString": "address"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 832,
                  "name": "_cap",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1631:12:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 831,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1631:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 834,
                  "name": "_token",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1649:20:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_contract$_MintableToken_$1278",
                    "typeString": "contract MintableToken"
                  },
                  "typeName": {
                    "contractScope": null,
                    "id": 833,
                    "name": "MintableToken",
                    "nodeType": "UserDefinedTypeName",
                    "referencedDeclaration": 1278,
                    "src": "1649:13:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_contract$_MintableToken_$1278",
                      "typeString": "contract MintableToken"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                },
                {
                  "constant": false,
                  "id": 836,
                  "name": "_goal",
                  "nodeType": "VariableDeclaration",
                  "scope": 861,
                  "src": "1675:13:8",
                  "stateVariable": false,
                  "storageLocation": "default",
                  "typeDescriptions": {
                    "typeIdentifier": "t_uint256",
                    "typeString": "uint256"
                  },
                  "typeName": {
                    "id": 835,
                    "name": "uint256",
                    "nodeType": "ElementaryTypeName",
                    "src": "1675:7:8",
                    "typeDescriptions": {
                      "typeIdentifier": "t_uint256",
                      "typeString": "uint256"
                    }
                  },
                  "value": null,
                  "visibility": "internal"
                }
              ],
              "src": "1533:159:8"
            },
            "payable": false,
            "returnParameters": {
              "id": 853,
              "nodeType": "ParameterList",
              "parameters": [],
              "src": "1848:0:8"
            },
            "scope": 862,
            "src": "1509:513:8",
            "stateMutability": "nonpayable",
            "superFunction": null,
            "visibility": "public"
          }
        ],
        "scope": 863,
        "src": "1422:602:8"
      }
    ],
    "src": "0:2025:8"
  },
  "compiler": {
    "name": "solc",
    "version": "0.4.19+commit.c4cbbb05.Emscripten.clang"
  },
  "networks": {
    "4": {
      "events": {},
      "links": {},
      "address": "0x974b3a023d9cdafa7797510d68b6f58fe7af1ab5",
      "transactionHash": "0x9eb24e6dc3b32a3c9b4263ae086c0261c2ad4bcb2641c88ef4206e11d8181f5e"
    }
  },
  "schemaVersion": "2.0.0",
  "updatedAt": "2018-04-13T09:00:33.591Z"
}